/**
* @file TEventSimData.cc
* @class TEventSimData
* @brief Define the sim data structure for each simulated event
*
* A ROOT dictionary for this class is generated by the Makefile
* @author Simone Riggi
* @date 22/12/2010
*/

#include "TEventSimData.hh"
#include "TStationSimData.hh"
#include "TScintHit.hh"
#include "TPMTHit.hh"

#include <iostream>

using namespace std;

TEventSimData::TEventSimData(){

	fStationSimDataCollection.clear();
	fStationSimDataCollection.resize(0);
  
}//close constructor

TEventSimData::~TEventSimData(){

}//close destructor

TStationSimData* TEventSimData::GetSimStation(int id){
	
	bool isStationInCollection= false;
	int collectionIndex= -1;

	TStationSimData* simStation= NULL;

	//search first if the station has been already stored in the collection 
	for(unsigned i=0;i<fStationSimDataCollection.size();i++){
		TStationSimData currentStation= fStationSimDataCollection[i];
		int currentStationId= currentStation.fId;
			
		if(currentStationId== id){
			//hit strip already stored in vector for this station
			isStationInCollection= true;
			collectionIndex= i;
			break;
		}	
	}//end search loop station strip hits

	if(isStationInCollection)
		simStation= &fStationSimDataCollection[collectionIndex];
		
	return simStation;

}//close HasSimStation()


bool TEventSimData::AddSimStation(TStationSimData station){

	//cout<<"TEventSimData::AddSimStation(): adding station "<<station.fId<<endl;
	bool isStationInCollection= false;
	int collectionIndex= -1;

	//summary info for this hit
	int Id= station.fId;

	//search first if the station has been already stored in the collection 
	for(unsigned i=0;i<fStationSimDataCollection.size();i++){
		TStationSimData currentStation= fStationSimDataCollection[i];
		int currentStationId= currentStation.fId;
			
		if(currentStationId== Id){
			//hit strip already stored in vector for this station
			isStationInCollection= true;
			collectionIndex= i;
			break;
		}	
	}//end search loop station strip hits

	//if the hit strip is not present just add it
	if(!isStationInCollection){	
		//cout<<"TEventSimData::AddSimStation(): not present in collection...adding it"<<endl;
		fStationSimDataCollection.push_back(station);
		return true;
	}
	

	//otherwise append particles to the existing station
	unsigned int nParticlesForThisStation= (station.fParticleSimDataCollection).size();
	//cout<<"Station found!...appending "<< nParticlesForThisStation<<" particles"<<endl;
	for(unsigned int j=0;j<nParticlesForThisStation;j++){	
		TParticleSimData particle= station.fParticleSimDataCollection[j];

		fStationSimDataCollection[collectionIndex].AddSimParticle(particle);
		//fStationSimDataCollection[collectionIndex].AddSimParticleInTimeBin(particle);
	}//end loop sim particles for this station


	return true;

}//close AddSimStation()


ClassImp(TEventSimData)

#ifdef __MAKECINT__
#pragma link C++ class TEventSimData+; 
#endif

#ifdef __MAKECINT__
#pragma link C++ class std::vector<TEventSimData*>+;
#endif

#ifdef __MAKECINT__
#pragma link C++ class std::vector<TEventSimData>+;
#endif

