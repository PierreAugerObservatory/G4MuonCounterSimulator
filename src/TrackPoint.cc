/**
* @file TrackPoint.hh
* @class TrackPoint
* @brief Define a track point in detector plane
*
* A TrackPoint class is created for a couple of detector plane X-Y if the Edep, Npe or Nph is above threshold for the X & Y strips 
* A ROOT dictionary for this class is generated by the Makefile
* @author Dr. Simone Riggi
* @date 06/09/2010
*/

#include "TrackPoint.hh"

TrackPoint::TrackPoint()
{
	fPositionErr.SetXYZ(0,0,0);
	fEdepX= 0.;
	fEdepY= 0.;
	fTimeX= 9.e+99;
	fTimeY= 9.e+99;

}//close constructor

TrackPoint::TrackPoint(double x,double y,double z)
{
	fPosition.SetXYZ(x,y,z);
	fPositionAtCenter.SetXYZ(x,y,z);
	fPositionErr.SetXYZ(0,0,0);
	fEdepX= 0.;
	fEdepY= 0.;
	fTimeX= 9.e+99;
	fTimeY= 9.e+99;

}//close constructor

TrackPoint::~TrackPoint(){


}//close destructor


int TrackPoint::operator==(const TrackPoint& aPoint) const{
	
  return (fPosition==aPoint.fPosition && fDetectorPlaneId==aPoint.fDetectorPlaneId);
}

ClassImp(TrackPoint)

#ifdef __MAKECINT__
#pragma link C++ class TrackPoint+; 
#endif

#ifdef __MAKECINT__
#pragma link C++ class std::vector<TrackPoint*>+;
#endif

#ifdef __MAKECINT__
#pragma link C++ class std::vector<TrackPoint>+;
#endif

