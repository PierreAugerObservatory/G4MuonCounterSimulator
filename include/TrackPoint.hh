/**
* @file TrackPoint.hh
* @class TrackPoint
* @brief Define a track point in detector plane
*
* A TrackPoint class is created for a couple of detector plane X-Y if the Edep, Npe or Nph is above threshold for the X & Y strips 
* A ROOT dictionary for this class is generated by the Makefile
* @author Dr. Simone Riggi
* @date 06/09/2010
*/


#ifndef TrackPoint_h
#define TrackPoint_h 1

#include <Rtypes.h>
#include <TObject.h>
#include <TVector3.h>

#include <iostream>
#include <vector>


class TrackPoint : public TObject {

	public:
		/** 
		\brief Class constructor: initialize structures.
 		*/   
  	TrackPoint();
		TrackPoint(double x,double y,double z);

		/** 
		\brief Class destructor: free allocated memory.
 		*/
    //virtual ~TrackPoint();
		~TrackPoint();

		/**
		* \brief Tells if two track points are equal 
		*/
  	int operator==(const TrackPoint& aPoint) const;

		/** 
		\brief Set track point position
 		*/
		//void SetPosition(TVector3 pos){fPosition= pos;}
		/** 
		\brief Get track point position
 		*/
		//TVector3 GetPosition(){return fPosition;}

		/** 
		\brief Set track point position
 		*/
		//void SetDetectorPlaneID(int value){fDetectorPlaneId= value;}
		/** 
		\brief Get track point position
 		*/
		//int GetDetectorPlaneID(){return fDetectorPlaneId;}


	public:

		//Summary vars
		/** 
		\brief XYZ Position of the track point (after spatial smearing)
 		*/
		TVector3 fPosition;
		/** 
		\brief XYZ Position uncertainty of the track point
 		*/
		TVector3 fPositionErr;
		/** 
		\brief XYZ Position of the track point (in the center of strip, before smearing)
 		*/
		TVector3 fPositionAtCenter;

		/** 
		\brief Detector plane ID of the track point
 		*/
		int fDetectorPlaneId;
		/** 
		\brief Is this track point due to primary muon
 		*/
		int fIsMuon;
		/** 
		\brief Energy deposit of strip X
 		*/
		double fEdepX;
		/** 
		\brief Energy deposit of strip Y
 		*/
		double fEdepY;
		/** 
		\brief Timing of strip X
 		*/
		double fTimeX;
		/** 
		\brief Timing of strip Y
 		*/
		double fTimeY;

  
  	ClassDef(TrackPoint,2)
		//ClassDef(TrackPoint,1)
};



#ifdef __MAKECINT__
#pragma link C++ class TrackPoint+; 
#endif

#ifdef __MAKECINT__
#pragma link C++ class std::vector<TrackPoint*>+;
#endif

#ifdef __MAKECINT__
#pragma link C++ class std::vector<TrackPoint>+;
#endif


#endif
