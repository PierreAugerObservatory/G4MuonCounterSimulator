/**
* @file Cluster.hh
* @class Cluster
* @brief Define a cluster of points in the detector plane
*
* A Cluster class is created for adhiacent hit points by the TrackFinder class
* A ROOT dictionary for this class is generated by the Makefile
* @author S. Riggi
* @date 25/02/2011
*/


#ifndef Cluster_h
#define Cluster_h 1

#include <Rtypes.h>
#include <TObject.h>
#include <TVector3.h>
#include <TGeoTrack.h>
#include <TVirtualGeoTrack.h>
#include "TrackPoint.hh"

#include <iostream>
#include <vector>


class Cluster : public TObject {

	public:
		/** 
		\brief Class constructor: initialize structures.
 		*/   
  	Cluster();
		/** 
		\brief Class destructor: free allocated memory.
 		*/
    //virtual ~Cluster();
		~Cluster();


	public:

		void AddPointDetId(int detId){fPointsDetId.push_back(detId);}
		std::vector<int> GetPointDetId(){return fPointsDetId;}
		void SetPointDetId(std::vector<int> vect){fPointsDetId= vect;}

		void AddPoint(TrackPoint point){fClusterPoints.push_back(point);}
		std::vector<TrackPoint> fClusterPoints; 

	private:
		
		std::vector<int> fPointsDetId;    
		
  
  	ClassDef(Cluster,1)
};



#ifdef __MAKECINT__
#pragma link C++ class Cluster+; 
#endif

#ifdef __MAKECINT__
#pragma link C++ class std::vector<Cluster*>+;
#endif

#ifdef __MAKECINT__
#pragma link C++ class std::vector<Cluster>+;
#endif


#endif
